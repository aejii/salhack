version project.modVersion
group project.modGroup

buildscript {
    repositories {
        mavenCentral()
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://repo.spongepowered.org/maven' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:4.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
        classpath 'com.google.code.gson:gson:2.8.6'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
    options.encoding = 'UTF-8'
}

repositories {
    maven { url = 'https://repo.spongepowered.org/maven/' }
    maven { url = 'https://impactdevelopment.github.io/maven/' }
    maven { url = "https://jitpack.io" }
}

minecraft {
    mappings channel: "$project.mcpChannel", version: "$project.mcpVersion"
    accessTransformer = file('src/main/resources/salhack_at.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'fml.coreMods.load', 'me.ionar.salhack.mixin.MixinLoaderForge'
            property 'mixin.env.disableRefMap', 'true' // Disable refmap so we don't get trolled by Baritone

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:$project.minecraftVersion-$project.forgeVersion"
    //mixin needs to be distributed with the mod, very important
    compile("org.spongepowered:mixin:0.7.11-SNAPSHOT") { // do NOT update this to 8.0 or above, it breaks compatibility with future client
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'commons-io'
        exclude module: 'log4j-core'
    }
    annotationProcessor('org.spongepowered:mixin:0.8.2:processor') {
        exclude module: 'gson'
    }
    compile "com.github.ionar2:Alpine:1.9f"
    compile group: 'net.jodah', name: 'typetools', version: '0.5.0'
    compile group: 'org.yaml', name: 'snakeyaml', version: '1.19'
    compile(group: 'org.reflections', name: 'reflections', version: '0.10.2') {
        exclude group: 'com.google.guava', module: 'guava'
    }
}

mixin {
    defaultObfuscationEnv 'searge'
    add sourceSets.main, 'mixins.salhack.refmap.json'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraftVersion

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraftVersion, 'version_lunatriuscore': project.version_lunatriuscore, 'version_schematica': project.version_schematica
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    // move _at.cfg into META-INF
    rename '(.+_at.cfg)', 'META-INF/$1'
}

shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin'))
        include(dependency('com.github.ionar2:Alpine'))
        include(dependency('net.jodah:typetools'))
        include(dependency('org.yaml:snakeyaml'))
        include(dependency('org.reflections:reflections'))
        include(dependency('org.javassist:javassist'))
    }
    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    archiveClassifier.set("release")
}

reobf {
    shadowJar {
        classpath = sourceSets.main.compileClasspath
    }
}

jar {
    manifest.attributes(
            'MixinConfigs': 'mixins.salhack.json',
            'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'TweakOrder': 0,
            'FMLCorePluginContainsFMLMod': 'true',
            'FMLCorePlugin': 'me.ionar.salhack.mixin.MixinLoaderForge',
            'ForceLoadAsMod': 'true',
            'FMLAT': 'salhack_at.cfg',
            'Main-Class': 'me.ionar.salhack.SalHackMod'
    )
}

jar.finalizedBy('reobfJar')